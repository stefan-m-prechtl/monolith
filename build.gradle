plugins {
    id 'war'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    jcenter()
}

dependencies {
	
	// Java EE 8 und Microprofile
	compileOnly  group: 'javax', name: 'javaee-api', version: '8.0'
	compileOnly group: 'org.eclipse.microprofile', name: 'microprofile', version: '3.0'
	
	// Commons... (aus Gründen der Build-/Deploy-Performance im lib-Verzeichnis vom Application-Server)
	compileOnly group: 'com.google.guava', name: 'guava', version: '28.1-jre'
	
	// ---- TESTING ---------------------------------------------------------------------------------------------
	
	// JUnit5-Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
        
	// Erweiterung: siehe http://joel-costigliola.github.io/assertj/assertj-core-quick-start.html
	testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.11.1'
	
	// Mockito für JUnit 5
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.25.1'
	
	// Commons
	testRuntimeOnly group: 'com.google.guava', name: 'guava', version: '23.0'
    
    // JPA Integrationtest
	testImplementation (group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.7.3') {
		exclude	group: 'org.eclipse.persistence', module: 'javax.persistence'
	}
	testImplementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    testImplementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
    
    // JSON
	testImplementation group: 'javax.json.bind', name: 'javax.json.bind-api', version: '1.0'
    testImplementation group: 'org.eclipse', name: 'yasson', version: '1.0.2'
    testImplementation  group: 'org.glassfish', name: 'javax.json', version: '1.1.4'
    testImplementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    
}


test {
	useJUnitPlatform() 
}

// Deploy WAR in Autodeploy-Verzeichnis
task (deployWar, type: Copy, group: 'deploy') {
	from('./build/libs')
    into('./docker/autodeploy')
}

// Docker
String currentDir = './docker'

task (upDC, type: Exec, group: 'docker') {
    workingDir currentDir
    commandLine 'docker-compose','up', '-d'
}

task (downDC, type: Exec, group: 'docker') {
    workingDir currentDir
    commandLine 'docker-compose','down', '-t', '0'
}

task (restartDC, type: Exec, group: 'docker') {
    workingDir currentDir
    commandLine 'docker-compose','restart', '-t','0'
}
